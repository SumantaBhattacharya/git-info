
GIT AND GITHUB
They are related to each other, but they are different

Github
______
is a Cloud based website OR hosting server 
   [WEBSITE]LOCAL SERVER/HOST MEANS You are the only person who have access to the website
            -------------
             YOUR SYSTEM

These are the concepts It is not related to any programming language
Github Is basically one type of website where we basically host our projects, source code and various types of files.
Github Can be useful in maintaining the source CODEThat means it allows to make changes in the source code
Github works in remote server.Github is a open source For collaborative purposes.
 Git is a software tool designed for version control. Git work is to keep the track of all changes
Without Git we cannot use Github
Github Works on remote server and Git works on local server
                                  [Project folder]Working Directory--->(Staging area)It is a place FROM where GIT starts its tracking--->[local repository]FOLDER--->ComMIt history.
https://git-scm.com/downloads
https://git-scm.com/download/win
https://github.com/git-for-windows/git/releases/download/v2.42.0.windows.2/Git-2.42.0.2-64-bit.exe
cmd command
git --version
program file --> GIT
c:\Program Files\Git
https://github.com/
E:\First Project
First Project Folder ---> Working directory ---> local system --->SSD--->E Drive

PS C:\Users\Sumanta Bhattacharya\OneDrive\Documents\Desktop\First Project> git status
fatal: not a git repository (or any of the parent directories): .git
PS C:\Users\Sumanta Bhattacharya\OneDrive\Documents\Desktop\First Project>
litral: saying is that it(file) is in the state of working directory,it is not yet changed/converted into remote or local repository
Until the file changed/converted into remote or local repository,it is not posiible to access through git
TO converted into remote or local repository,WE use this command
git init

PS C:\Users\Sumanta Bhattacharya\OneDrive\Documents\Desktop\First Project>git init 
Initialized empty Git repository in C:/Users/Sumanta Bhattacharya/OneDrive/Documents/Desktop/First Project/.git/
PS C:\Users\Sumanta Bhattacharya\OneDrive\Documents\Desktop\First Project> git init
Reinitialized existing Git repository in C:/Users/Sumanta Bhattacharya/OneDrive/Documents/Desktop/First Project/.git/
C:\Users\Sumanta Bhattacharya\OneDrive\Documents\Desktop\First Project

PS C:\Users\Sumanta Bhattacharya\OneDrive\Documents\Desktop\First Project> git status
On branch master

No commits yet

nothing to commit (create/copy files and use "git add" to track)
___________________________________________________________________________
By default, the branch which is created in Github is called master branch.
We will always work on main branch.
---------------------------------------------------------------------

TO not converted into remote or local repository,WE use this command
Remove-Item -Recurse -Force .git

Windows PowerShell
Copyright (C) Microsoft Corporation. All rights reserved.

Install the latest PowerShell for new features and improvements! https://aka.ms/PSWindows

PS C:\Users\Sumanta Bhattacharya> git status
fatal: not a git repository (or any of the parent directories): .git
PS C:\Users\Sumanta Bhattacharya>

What specific features are you interested in using?
Select all that apply so we can point you to the right GitHub plan.


GitHub Collaboration Icon
Collaborative coding
Codespaces, Pull requests, Notifications, Code review, Code review assignments, Code owners, Draft pull requests, Protected branches, and more.

GitHub Automation and CI/CD Icon
Automation and CI/CD
Actions, Packages, APIs, GitHub Pages, GitHub Marketplace, Webhooks, Hosted runners, Self-hosted runners, Secrets management, and more.

GitHub Security Icon
Security
Private repos, 2FA, Required reviews, Required status checks, Code scanning, Secret scanning, Dependency graph, Dependabot alerts, and more.

Enterprise security
SAML, LDAP, IP allow list, GitHub Connect, and Audit log API.

GitHub Client Apps Icon
Client Apps
GitHub Mobile, GitHub CLI, and GitHub Desktop.

GitHub Project Management Icon
Project Management
Projects, Labels, Milestones, Issues, Unified Contribution Graph, Org activity graph, Org dependency insights, Repo insights, Wikis, and GitHub Insights.

GitHub Team Administration Icon
Team Administration
Organizations, Invitations, Team sync, Custom roles, Domain verification, Audit Log API, Repo creation restriction, and Notification restriction.

GitHub Community Icon
Community
GitHub Marketplace, GitHub Sponsors, GitHub Skills, and Electron.

U untracked
PS C:\Users\Sumanta Bhattacharya\OneDrive\Documents\Desktop\First Project> git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        xyz.txt

nothing added to commit but untracked files present (use "git add" to track)

PS C:\Users\Sumanta Bhattacharya\OneDrive\Documents\Desktop\First Project> git add xyz.txt
A index added means it has been entered into local repositary
PS C:\Users\Sumanta Bhattacharya\OneDrive\Documents\Desktop\First Project> git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   xyz.txt

red untracted
green tracked

if we delete the file from the folder
PS C:\Users\Sumanta Bhattacharya\OneDrive\Documents\Desktop\First Project> git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   xyz.txt

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    xyz.txt

another way to transfer from the local repository to working directory but not deleted
PS C:\Users\Sumanta Bhattacharya\OneDrive\Documents\Desktop\First Project> git rm --cached xyz.txt
rm 'xyz.txt'
converted to U from A
PS C:\Users\Sumanta Bhattacharya\OneDrive\Documents\Desktop\First Project> git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        xyz.txt

nothing added to commit but untracked files present (use "git add" to track)
now we can delete it from the folder
first method The history was remained, but in the second method, the history was deleted

cls/clear to clear the terminal

PS C:\Users\Sumanta Bhattacharya\OneDrive\Documents\Desktop\First Project> git commit -m "my first commit"
[master (root-commit) 85231d7] my first commit
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 MyCode.txt

 PS C:\Users\Sumanta Bhattacharya\OneDrive\Documents\Desktop\First Project> git init -b main                
Initialized empty Git repository in C:/Users/Sumanta Bhattacharya/OneDrive/Documents/Desktop/First Project/.git/

PS C:\Users\Sumanta Bhattacharya\OneDrive\Documents\Desktop\First Project> git status
On branch main

No commits yet

nothing to commit (create/copy files and use "git add" to track)

git init(to initialise to local repository from woking directory(to add .git))
Remove-Item -Recurse -Force .git
git status
git add file.txt
git rm --cached file.txt
git init -b main (to change it from the branch master to main)

we will work in the main branch


git init: Initializes a new Git repository in the current directory, creating a .git directory to store all the version control information.

Remove-Item -Recurse -Force .git: This command appears to be used to remove the .git directory, effectively undoing the initialization of the Git repository.

git status: Checks and displays the current status of the files in your working directory, showing untracked, modified, and staged files.

git add file.txt: Stages the changes in the file.txt to be committed. It prepares the file for the next commit.

git rm --cached file.txt: Unstages the file.txt, which means the changes in this file will not be included in the next commit. This effectively reverses the "git add" operation for the specified file.

git init -b main: Initializes a new Git repository and specifies the default branch name as "main" instead of the default "master."

git commit -m "My first commit": Commits the staged changes to the Git repository, creating a new commit with the given commit message.

These are essential Git commands for initializing a repository, managing changes, and making commits. Please let me know if you have any specific questions or if there's anything else you'd like to learn about Git and GitHub.
YO

The git log command is a useful tool for reviewing the history of changes in your Git repository, tracking who made each commit, and understanding the order and content of those commits.

 Git 
Version Control System in a tools that helps to track changes in code
Git is a version Control System 
It is free,popular,Open source,fast and scalable.
advantages
track the history
collaborative 

Github

Website that allows devlopers to store and manage their code using Git
https://github.com

Github Account 
Create a new respository: apnacollege-demo
Make our first commit

Setting up Git

Visual studio code
Windows(Git Bash)
Mac(Terminal)

Configuring Git

git config --global user.name "My Name"
git config --global user.email "<EMAIL>"
git config --list

git --version
global user.name "SumantaBhattacharya"
global user.email "sumanta2004@gmail.com"
list

Clone -  Cloning a repository on our local machine
git clone <- some link ->
status - displays the state of the code
git status

Add & Commit
add-adds new or changed files in your working directory to the Git staging area
git add<- file name ->
commit- it is the record of change
git commit -m "some message"
Push command
push-upload local repo content to rtemote repogit push origin main
git push origin main

Init command
init- used to create a new git repository
git initgit remote add origin <-link->
git remote -v (to verify remote)
git branch (to check branch )
git branch machine -M main (to rename branch )
git puch origin main

Branch commands
git brach (to check branch)
git branch machine -M main (to rename branch )
git checkout branch_name -> (to navigate,change branch)
git checkout -b new_branch_name -> (to create new branch)
git branch -d branch_name -> (to delete branch)
git push origin --delete feature-1
git branch -a (to get how many git branches are there in your system)
git branch machine -M main (to rename branch )
git branch machine -M main main

Merging Codeway 1
git diff <- branch name -> (to compare commits,branches,files and more)
git merge <- branch name -> (to merge 2 branches)

way 2
create a PR
Pull requestsIt lets you tell others about changes you have pushed to a branch in a repository on GitHub
11
if you want to get the differences between the two branches, then you can use the following command 
git diff the_branch_name_that_you_want_to_comapre_with  

to create a new folder in the working directory i.e MyCode
mkdir folder.name

mkdir localrepo
cd localrepo
git init (to make it get repository)


git clone https://github.com/SumantaBhattacharya/git-info.git

cd-change directory
cd .\GITDEMO
cd .\git-info
cd ..
clear
ls
Get-ChildItem -Force

git clone https://github.com/SumantaBhattacharya/git-info.git

Cloning into 'git-info'...
remote: Enumerating objects: 37, done.
remote: Counting objects: 100% (37/37), done.
remote: Compressing objects: 100% (25/25), done.
remote: Total 37 (delta 10), reused 28 (delta 6), pack-reused 0
Receiving objects: 100% (37/37), 7.54 KiB | 1.88 MiB/s, done.
Resolving deltas: 100% (10/10), done.

cd .\GITDEMO
ls

Directory: C:\Users\Sumanta Bhattacharya\OneDrive\Documents\Desktop\WD\GITDEMO

Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
la---          12-02-2024    11:49                git-info

cd .\git-info
ls
Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
la---          12-02-2024    11:49            250 INTRO.txt
la---          12-02-2024    11:49           9039 MyCode.txt
la---          12-02-2024    11:49            112 Name.txt
la---          12-02-2024    11:49             50 README.md

M-modified
U-untracked

meanings:
untracked 
new files that git doesn't yet track
modified
changed
staged
file is ready to be committed
unmodified
unchanged

add-adds new or changed files in your working directory to the Git staging area
git add INTRO.txt
git add .(for all)
git commit -m "Remove INTRO.txt"
git branch
git push origin main

git branch
* main

to delete files in your working directory
git add Name.txt 
git commit -m "Remove INTRO.txt"
git branch 
git push origin main

to change/update from M 
 git add .
 git commit -m "Updated MyCode" 
 git push origin main

when you didnt checked on thr readme then 
quick setup- if you done this kind of this befor
type this command in the terminal 
git remote add origin link

github repository-https://github.com/SumantaBhattacharya/git-info.git
clone-git clone https://github.com/SumantaBhattacharya/git-info.git
changes
add-git add .
commit- git commit -m "Updated MyCode" 
push-git push origin main

                    <--[Feature] 
        ---()--()--()
()--()-----()--()
               <--[master]
*/

                            

